@model IEnumerable<SheetMusic.Models.Piece>
@using System.EnterpriseServices
@using System.ServiceModel.Syndication
@using System.Web.UI.WebControls
@using WebMatrix.Data;
@using Microsoft.AspNet.Identity;
@using SheetMusic.Models

@{
    ViewBag.Title = "Index";



    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Sheetz.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //string selectCommand = "SELECT * FROM Pieces";
    string selectCommand = "SELECT * FROM Pieces";
    var searchTerm = "";

    var cachedShit = "";

    bool isFound = false;

    var _key = User.Identity.GetUserId();



    if (IsPost)
    {
    	//Get stuff from forms.
        cachedShit = Request["searchTitle"];
        searchTerm = "%" + Request["searchTitle"] + "%";

        //Grab values of checkboxes
        var a1 = Request.Form["nameFilter"];
        var a2 = Request["genreFilter"];
        var a3 = Request["jaarFilter"];
        var a4 = Request["moeilijkheidFilter"];

        if (a1 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("name");
            isFound = true;

        }
        else if (a2 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("genre");
            isFound = true;
        }
        else if(a3 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("year");
            isFound = true;
        }
        else if(a4 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("difficulty");
        }
        //searchTerm = Request.QueryString["searchTitle"];

    }

    var endResult = selectCommand + searchTerm;

    var PiecesDB = db.Query(selectCommand, searchTerm);

}
<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Piece", "Create", null, new { @class = "btn btn-primary" })
</p>

<br />


<form method="post">

    <label for="nameFilter">Zoek op naam</label>
    <input type="checkbox" name="nameFilter" checked="checked" /><br>

    <label for="genreFilter">Zoek op Genre</label>
    <input type="checkbox" name="genreFilter" /><br>

    <label for="jaarFilter">Zoek op Jaar</label>
    <input type="checkbox" name="jaarFilter" /><br>

    <label for="moeilijkheidFilter">Zoek op moeilijkheid</label>
    <input type="checkbox" name="moeilijkheidFilter" /><br>

    <input type="text" name="searchTitle" placeholder="Search" value="@cachedShit" />
    <input type="submit" value="Search" />
</form>

<br>
<div class="menu">
    <table class="table table-hover table-striped">
        <thead class="thead-dark">
            <tr class="row">
                <th>Naam:</th>
                <th>Componist:</th>
                <th>Genre:</th>
                <th>Jaar:</th>
                <th>Moeilijkheid:</th>
            </tr>
        </thead>
        @foreach (var record in PiecesDB)
        {
            <tr class="row">
                <td>
                    @record.PieceName
                    <p>@record.PieceSubName</p>
                </td>
                <td>@record.Artist</td>
                <td>@record.Genre</td>
                <td>@record.Year</td>
                <td>@record.Difficulty</td>
                <td>@Html.ActionLink("Edit", "Edit", new { id = record.Id }, new { @class = "btn btn-primary" })</td>
            </tr>
        }
    </table>
</div>


@if (!Request.IsAuthenticated)
{
    Response.Redirect(Url.Action("Login", "Account"));
}
