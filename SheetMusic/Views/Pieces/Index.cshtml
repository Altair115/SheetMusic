@model IEnumerable<SheetMusic.Models.Piece>


@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Piece", "Create", null, new { @class = "btn btn-primary" })
</p>

<div>
    <row>
        @Html.ActionLink("Search on Name.", "Index", null, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Genre", "Index", new { sortOrder = ViewBag.GenreSearchParm }, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Difficulty", "Index", new { sortOrder = ViewBag.DifficultySearchParm }, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Year", "Index", new { sortOrder = ViewBag.YearSearchParm }, new { @class = "btn btn-primary" })
    </row>
</div>

<br />


@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("searchParams")
        <input type="submit" value="Search" />
    </p>
}

<table class="table" id="tblPopulation">
    <!--name, artist, genre, year, difficulty-->
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.PieceName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Artist)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Year)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Difficulty)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PieceName)
                <p>@Html.DisplayFor(modelItem => item.PieceSubName)</p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Artist)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Difficulty)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>

@if (!Request.IsAuthenticated)
    {
        Response.Redirect(Url.Action("Login", "Account"));
    }

