@model IEnumerable<SheetMusic.Models.Piece>
@using System.EnterpriseServices
@using System.ServiceModel.Syndication
@using System.Web.UI.WebControls
@using WebMatrix.Data;
@using Microsoft.AspNet.Identity;
@using SheetMusic.Models

@{
    ViewBag.Title = "Index";



    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Sheetz.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //string selectCommand = "SELECT * FROM Pieces";
    string selectCommand = "SELECT * FROM Pieces";
    var searchTerm = "";

    var cachedShit = "";

    bool isFound = false;

    var _key = User.Identity.GetUserId();



    if (IsPost)
    {
        //Get stuff from forms.
        var lastChecked = "";
        cachedShit = Request["searchTitle"];
        searchTerm = "%" + Request["searchTitle"] + "%";

        //Grab values of checkboxes
        var a1 = Request["nameFilter"];
        var a2 = Request["genreFilter"];
        var a3 = Request["jaarFilter"];
        var a4 = Request["moeilijkheidFilter"];
        var a5 = Request["artistFilter"];

        if (a1 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("name");
            resolver.SetCorrectCheckBoxShit("a1");
            isFound = true;

        }
        else if (a2 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("genre");
            resolver.SetCorrectCheckBoxShit("a2");
            isFound = true;
        }
        else if (a3 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("year");
            resolver.SetCorrectCheckBoxShit("a3");
            isFound = true;
        }
        else if (a4 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("difficulty");
            resolver.SetCorrectCheckBoxShit("a4");
            isFound = true;
        }
        else if (a5 == "on" && isFound == false)
        {
            selectCommand = resolver.getQueryString("artist");
            resolver.SetCorrectCheckBoxShit("a5");
        }

    }

    var PiecesDB = db.Query(selectCommand, searchTerm);

}

<head>
    <link rel=" stylesheet" type="text/css" href="~/Custom_Style/Custom Layout.css" />

    <style>
        thead {
            background-color: #357cb4;
            color: white;
        }

        input,
        select,
        textarea {
            max-width: initial;
        }
    </style>
</head>

<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Piece", "Create", null, new { @class = "btn btn-primary" })
</p>

<br />

<form method="post">
    <div id="checkbox-container">
        <div>
            <label for="nameFilter">Search on Name</label>
            <input type="checkbox" name="nameFilter" class="mustSave" /><br>
        </div>

        <div>
            <label for="artistFilter">Search on Artist</label>
            <input type="checkbox" name="artistFilter" class="mustSave" /><br>
        </div>

        <div>
            <label for="genreFilter">Search on Genre</label>
            <input type="checkbox" name="genreFilter" class="mustSave" /><br>
        </div>

        <div>
            <label for="jaarFilter">Search on Year</label>
            <input type="checkbox" name="jaarFilter" class="mustSave" /><br>
        </div>

        <div>
            <label for="moeilijkheidFilter">Search on Difficulty</label>
            <input type="checkbox" name="moeilijkheidFilter" class="mustSave" /><br>
        </div>
    </div>

    <div class="input-group">
        <input type="text" class="form-control" name="searchTitle" placeholder="Search" value="@cachedShit">
        <div class="input-group-btn">
            <button value="Search" class="btn btn-default" type="submit">
                <span class="glyphicon glyphicon-search" aria-hidden="true">
                </span> Search!
            </button>
        </div>
    </div>
</form>


<br>
<div class="menu">
    <table class="table table-hover table-striped">
        <thead>
            <tr class="row">
                <th>Naam:</th>
                <th>Componist:</th>
                <th>Genre:</th>
                <th>Jaar:</th>
                <th>Moeilijkheid:</th>
            </tr>
        </thead>
        @foreach (var record in PiecesDB)
        {
            <tr class="row">
                <td>
                    @record.PieceName
                    <p>@record.PieceSubName</p>
                </td>
                <td>@record.Artist</td>
                <td>@record.Genre</td>
                <td>@record.Year</td>
                <td>@record.Difficulty</td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = record.Id }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Details", "Details", new { id = record.Id }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Delete", "Delete", new { id = record.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </table>
</div>


@if (!Request.IsAuthenticated)
{
    Response.Redirect(Url.Action("Login", "Account"));
}

<script src="http://code.jquery.com/jquery.js"></script>
<script>
    //this piece of shit doesnt work.....
    (function () {
        // Var for local saving
        var cbstate;

        // hook the load event of page
        window.addEventListener('load', function () {
            // Get the current state from localstorage
            // State is stored as a JSON string
            cbstate = JSON.parse(localStorage['CBState'] || '{}');

            // Loop through state array and restore checked
            for (var i in cbstate) {
                var el = document.querySelector('input[name="' + i + '"]');
                if (el) el.checked = true;
            }

            // Retrieve all out checkboxes
            var cb = document.getElementsByClassName('save-cb-state');

            for (var i = 0; i < cb.length; i++) {

                //hook click event and do check box shit
                cb[i].addEventListener('click', function (evt) {

                    if (this.checked) {
                        cbstate[this.name] = true;
                    }

                    else if (cbstate[this.name]) {
                        delete cbstate[this.name];
                    }

                    localStorage.CBState = JSON.stringify(cbstate);
                });
            }
        });
    })();
</script>