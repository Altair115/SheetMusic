@model IEnumerable<SheetMusic.Models.Piece>
@using WebMatrix.Data;
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Index";


    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Sheetz.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    var selectCommand = "SELECT * FROM Pieces";
    var searchTerm = "";

    var _key = User.Identity.GetUserId();

    if (!Request.QueryString["searchGenre"].IsEmpty())
    {
        selectCommand = "SELECT * FROM Pieces WHERE Genre = @0";
        searchTerm = Request.QueryString["searchGenre"];
    }

    if (!Request.QueryString["searchTitle"].IsEmpty())
    {
        selectCommand = "SELECT * FROM Pieces WHERE PieceName LIKE @0";
        searchTerm = "%" + Request["searchTitle"] + "%";
    }

    var PiecesDB = db.Query(selectCommand, searchTerm);

}
<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Piece", "Create", null, new { @class = "btn btn-primary" })
</p>

<div>
    <row>
        @Html.ActionLink("Search on Name.", "Index", null, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Genre", "Index", new { sortOrder = ViewBag.GenreSearchParm }, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Difficulty", "Index", new { sortOrder = ViewBag.DifficultySearchParm }, new { @class = "btn btn-primary" })
    </row>
    <row>
        @Html.ActionLink("Search on Year", "Index", new { sortOrder = ViewBag.YearSearchParm }, new { @class = "btn btn-primary" })
    </row>
</div>

<br />




@*

    @using (Html.BeginForm())
    {
        <p>
            Search: @Html.TextBox("searchParams")
            <input type="submit" value="Search" />
        </p>
    }

    <table class="table" id="tblPopulation">
        <!--name, artist, genre, year, difficulty-->
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PieceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Difficulty)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PieceName)
                    <p>@Html.DisplayFor(modelItem => item.PieceSubName)</p>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Artist)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Difficulty)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
*@



<form method="get">
    <input type="text" name="searchTitle" placeholder="Search" value="@Request.QueryString["searchTitle"]" />
    <input type="submit" value="Search" />
</form>

<br>
<div class="menu">
    <table class="table table-hover table-striped">
        <thead class="thead-dark">
            <tr class="row">
                <th>Gift:</th>
                <th>Artist:</th>
                <th>Genre:</th>
                <th>Year:</th>
                <th>Difficulty:</th>
            </tr>
        </thead>
        @foreach (var record in PiecesDB)
        {
            <tr class="row">
                <td>
                    @record.PieceName
                    <p>@record.PieceSubName</p>
                </td>
                <td>@record.Artist</td>
                <td>@record.Genre</td>
                <td>@record.Year</td>
                <td>@record.Difficulty</td>
                <td>@Html.ActionLink("Edit", "Edit", new { id = record.Id }, new { @class = "btn btn-primary" })</td>
            </tr>
        }
    </table>
</div>


@if (!Request.IsAuthenticated)
{
    Response.Redirect(Url.Action("Login", "Account"));
}

