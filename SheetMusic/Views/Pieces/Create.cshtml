@using System.Web.UI.WebControls
@model SheetMusic.Models.Piece

@{
    ViewBag.Title = "Create";

    //Items for dropdown list
    //Razor pages is truly something else...
    var ListItems = new List<ListItem>
    {
        new ListItem {Text = "Rock", Value = "Rock"},
        new ListItem{Text = "Caribbean", Value="Caribbean"},
        new ListItem{Text="Pop", Value="Pop"},
        new ListItem{Text="Hip Hop", Value="Hip Hop"},
        new ListItem{Text="Blues", Value="Blues"},
        new ListItem{Text="Country", Value="Country"},
        new ListItem{Text="R&B Soul", Value="R&BSoul"},
        new ListItem{Text="Jazz", Value="Jazz"},
        new ListItem{Text="Electronic", Value="Electronic"}
    };

    //List for Difficulties
    var difficulties = new List<ListItem>
    {
        new ListItem {Text = "Beginner", Value = "Beginner"},
        new ListItem {Text = "Intermediate", Value = "Intermediate"},
        new ListItem {Text = "Expert", Value = "Expert"},
        new ListItem {Text = "Expert Plus", Value = "Expert Plus"}
    };
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Piece</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PieceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PieceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PieceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PieceSubName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PieceSubName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PieceSubName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Genre, new SelectList(ListItems, "Value", "Text"))
                @Html.ValidationMessageFor(model => model.Genre, "", new {@class = "text-danger"})
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Difficulty, new SelectList(difficulties, "Value", "Text"))
                @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
